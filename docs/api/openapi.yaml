openapi: 3.0.3
info:
  title: Shorten URL Service
  version: "1.0.0"
  description: |
    A modern, fast URL shortener built with Cloudflare Workers and a responsive web interface.
    - Anyone can create short URLs (no authentication required).
    - Custom slugs are supported.
    - The homepage is served at `/home`.
    - API is available at `/` (POST) for shortening URLs.
    - Short URL access is via `/{key}` (GET).
    - Custom error pages for 404, security warnings, and redirects.

servers:
  - url: https://url.tsou.me

paths:
  /:
    post:
      summary: Shorten a URL
      description: Create a new shortened URL, optionally with a custom slug.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                url:
                  type: string
                  format: uri
                  description: The long URL to shorten.
                custom_slug:
                  type: string
                  description: Optional custom slug for the short URL.
      responses:
        '200':
          description: Short URL created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  key:
                    type: string
                    example: /abc123
        '400':
          description: Invalid input or custom slug already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: Invalid URL format
        '500':
          description: Server error or KV write limitation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: Error: Reach the KV write limitation

  /{key}:
    get:
      summary: Access a shortened URL
      description: Redirects to the original URL or shows a custom error page if not found.
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
          description: The short URL key or custom slug.
      responses:
        '302':
          description: Redirect to the original URL
        '404':
          description: Short URL not found (custom 404 page)
        '403':
          description: Blocked or unsafe URL (custom warning page)

  /home:
    get:
      summary: Homepage
      description: Serves the main frontend interface for the URL shortener.
      responses:
        '200':
          description: The HTML homepage

components:
  schemas:
    ShortenRequest:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          format: uri
        custom_slug:
          type: string
    ShortenResponse:
      type: object
      properties:
        status:
          type: integer
        key:
          type: string
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string 