name: Deploy to GitHub Pages (Advanced)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      custom_domain:
        description: 'Custom domain for CNAME'
        required: false
        default: ''

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4



      - name: Validate files
        run: |
          echo "Checking required files..."
          if [ ! -f "index.html" ]; then
            echo "index.html not found"
            exit 1
          fi
          if [ ! -f "worker.js" ]; then
            echo "worker.js not found"
            exit 1
          fi
          echo "All required files found"

      - name: Handle CNAME
        run: |
          # Check if CNAME already exists in repository
          if [ -f "CNAME" ]; then
            echo "CNAME file found in repository:"
            cat CNAME
            CNAME_CONTENT=$(cat CNAME)
          else
            echo "No CNAME file found in repository"
            CNAME_CONTENT=""
          fi
          
          # Check for custom domain from workflow dispatch
          if [ "${{ github.event.inputs.custom_domain }}" != "" ]; then
            echo "Using custom domain from workflow dispatch: ${{ github.event.inputs.custom_domain }}"
            CNAME_CONTENT="${{ github.event.inputs.custom_domain }}"
          fi
          
          # Check for custom domain from secrets
          if [ "${{ secrets.CUSTOM_DOMAIN }}" != "" ] && [ "$CNAME_CONTENT" = "" ]; then
            echo "Using custom domain from secrets: ${{ secrets.CUSTOM_DOMAIN }}"
            CNAME_CONTENT="${{ secrets.CUSTOM_DOMAIN }}"
          fi
          
          # Create or update CNAME file
          if [ "$CNAME_CONTENT" != "" ]; then
            echo "Creating/updating CNAME file with: $CNAME_CONTENT"
            echo "$CNAME_CONTENT" > CNAME
          else
            echo "No custom domain specified, using default GitHub Pages URL"
            # Remove CNAME if it exists and no custom domain is specified
            if [ -f "CNAME" ]; then
              rm CNAME
              echo "Removed existing CNAME file"
            fi
          fi
          
          # Display final CNAME content
          if [ -f "CNAME" ]; then
            echo "Final CNAME content:"
            cat CNAME
          fi

      - name: Validate HTML
        run: |
          echo "Validating HTML structure..."
          if grep -q "<!DOCTYPE html>" index.html; then
            echo "HTML doctype found"
          else
            echo "HTML doctype not found"
          fi
          
          if grep -q "<title>" index.html; then
            echo "HTML title found"
          else
            echo "HTML title not found"
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment Summary
        run: |
          echo "Deployment completed!"
          echo "Frontend URL: ${{ steps.deployment.outputs.page_url }}"
          if [ -f "CNAME" ]; then
            echo "Custom domain: $(cat CNAME)"
          else
            echo "Using default GitHub Pages URL"
          fi
          echo "Worker file: worker.js (deploy separately to Cloudflare)" 